// { author: 'ave' }

const fs = require('fs');
const readline = require('readline');

/** 
 * Prepend, append, and modify lines from an existing text files.
 * 
 * The following example comments an entire file:
 * 
 *     rewrite('code.js', {
 *         start: ()     => { return '// start of file\n' },
 *         line:  (line) => { return '//' + line }
 *         end:   ()     => { return '// end of file\n' },
 *     });
 */
module.exports = function(file, hooks) {
    // We need to access the old file while writing. It is renamed and later
    // deleted.
    const temp = file + '.temp'
    fs.renameSync(file, temp)

    writeStream = fs.createWriteStream(file, {
        flags: 'wx',
        encoding: 'utf8'
    })

    // Prepending is done here.
    if (hooks.start) {
        writeStream.write(hooks.start())
        writeStream.write('\n')
    }

    readStream = fs.createReadStream(temp, {
        flags: 'r',
        encoding: 'utf8'
    })

    // Injecting arbitrary lines is done here.
    interface = readline.createInterface({
        input: readStream
    })

    interface.on('line', (line) => {
        if (hooks.line) {
            writeStream.write(hooks.line(line))
            writeStream.write('\n')
        } else {
            writeStream.write(line)
            writeStream.write('\n') 
        }
        
    })

    interface.on('close', () => {
        if (hooks.end) {
            writeStream.write(hooks.end())
            writeStream.write('\n')
        }

        writeStream.end()

        // The new file is now complete, delete the old one.
        fs.unlinkSync(temp)
    })
}